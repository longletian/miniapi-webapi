// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using miniapi_webapi.Infrastructure;

#nullable disable

namespace miniapi_webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220120035809_update-migration")]
    partial class updatemigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.DepartmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GmtCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Manager")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("t_department");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.RolePermissionEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("t_role_permission");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Account")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AccountPwd")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("DepartmentEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("GmtCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("GmtModified")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderSort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentEntityId");

                    b.ToTable("t_user");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.UserRoleEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("t_user_role");
                });

            modelBuilder.Entity("miniapi_webapi.Model.PermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("GmtCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("GmtModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderSort")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("t_permission");
                });

            modelBuilder.Entity("miniapi_webapi.Model.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("GmtCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("GmtModified")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderSort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("t_role");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.RolePermissionEntity", b =>
                {
                    b.HasOne("miniapi_webapi.Model.PermissionEntity", "PermissionEntity")
                        .WithMany("RolePermissionEntities")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("miniapi_webapi.Model.RoleEntity", "RoleEntity")
                        .WithMany("RolePermissionEntities")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionEntity");

                    b.Navigation("RoleEntity");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.UserEntity", b =>
                {
                    b.HasOne("miniapi_webapi.Model.Entitys.DepartmentEntity", "DepartmentEntity")
                        .WithMany("UserEntities")
                        .HasForeignKey("DepartmentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentEntity");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.UserRoleEntity", b =>
                {
                    b.HasOne("miniapi_webapi.Model.RoleEntity", "RoleEntity")
                        .WithMany("UserRoleEntities")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("miniapi_webapi.Model.Entitys.UserEntity", "UserEntity")
                        .WithMany("UserRoleEntities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.DepartmentEntity", b =>
                {
                    b.Navigation("UserEntities");
                });

            modelBuilder.Entity("miniapi_webapi.Model.Entitys.UserEntity", b =>
                {
                    b.Navigation("UserRoleEntities");
                });

            modelBuilder.Entity("miniapi_webapi.Model.PermissionEntity", b =>
                {
                    b.Navigation("RolePermissionEntities");
                });

            modelBuilder.Entity("miniapi_webapi.Model.RoleEntity", b =>
                {
                    b.Navigation("RolePermissionEntities");

                    b.Navigation("UserRoleEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
